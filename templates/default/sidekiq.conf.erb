# This example config should work with Ubuntu 12.04+.  It
# allows you to manage Sidekiq instances with
# Upstart, Ubuntu's native service management tool.
#
# NOTE: This is heavily inspired by Sidekiq's example sidekiq.conf
#
# Save this config as /etc/init/sidekiq-APPNAME.conf then mange sidekiq with:
#   sudo start sidekiq-<%= @app_name %> index=0
#   sudo stop sidekiq-<%= @app_name %> index=0
#   sudo status sidekiq-<%= @app_name %> index=0
#
# Hack Upstart's reload command to 'quiet' Sidekiq:
#
#   sudo reload sidekiq-<%= @app_name %> index=0
#
# or use the service command:
#   sudo service sidekiq-<%= @app_name %> {start,stop,restart,status}

description "Sidekiq Upstart process"

# change to match your deployment user
setuid <%= @user %>
setgid <%= @group %>

respawn
respawn limit 3 30

# TERM is sent by sidekiqctl when stopping sidekiq. Without declaring these as
# normal exit codes, it just respawns.
normal exit 0 TERM

# Older versions of Upstart might not support the reload command and need
# this commented out.
reload signal USR1

instance $index

chdir "<%= @release_path %>"

<% @env.each do |k,v| %>
env <%= k %>=<%= (v || '').to_s.gsub('"', '\\"') %>
<% end %>

script
  exec <%= @start_command %>
end script
